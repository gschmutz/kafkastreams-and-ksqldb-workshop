/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.trivadis.kafkaws.avro.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class NotificationSentEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3327506776293822428L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotificationSentEvent\",\"namespace\":\"com.trivadis.kafkaws.avro.v1\",\"fields\":[{\"name\":\"context\",\"type\":{\"type\":\"record\",\"name\":\"Context\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"when\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}},{\"name\":\"notification\",\"type\":{\"type\":\"record\",\"name\":\"Notification\",\"fields\":[{\"name\":\"message\",\"type\":[\"null\",\"string\"]}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<NotificationSentEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NotificationSentEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<NotificationSentEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<NotificationSentEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<NotificationSentEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this NotificationSentEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a NotificationSentEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a NotificationSentEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static NotificationSentEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.trivadis.kafkaws.avro.v1.Context context;
  private com.trivadis.kafkaws.avro.v1.Notification notification;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NotificationSentEvent() {}

  /**
   * All-args constructor.
   * @param context The new value for context
   * @param notification The new value for notification
   */
  public NotificationSentEvent(com.trivadis.kafkaws.avro.v1.Context context, com.trivadis.kafkaws.avro.v1.Notification notification) {
    this.context = context;
    this.notification = notification;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return context;
    case 1: return notification;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: context = (com.trivadis.kafkaws.avro.v1.Context)value$; break;
    case 1: notification = (com.trivadis.kafkaws.avro.v1.Notification)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'context' field.
   * @return The value of the 'context' field.
   */
  public com.trivadis.kafkaws.avro.v1.Context getContext() {
    return context;
  }


  /**
   * Sets the value of the 'context' field.
   * @param value the value to set.
   */
  public void setContext(com.trivadis.kafkaws.avro.v1.Context value) {
    this.context = value;
  }

  /**
   * Gets the value of the 'notification' field.
   * @return The value of the 'notification' field.
   */
  public com.trivadis.kafkaws.avro.v1.Notification getNotification() {
    return notification;
  }


  /**
   * Sets the value of the 'notification' field.
   * @param value the value to set.
   */
  public void setNotification(com.trivadis.kafkaws.avro.v1.Notification value) {
    this.notification = value;
  }

  /**
   * Creates a new NotificationSentEvent RecordBuilder.
   * @return A new NotificationSentEvent RecordBuilder
   */
  public static com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder newBuilder() {
    return new com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder();
  }

  /**
   * Creates a new NotificationSentEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NotificationSentEvent RecordBuilder
   */
  public static com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder newBuilder(com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder other) {
    if (other == null) {
      return new com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder();
    } else {
      return new com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder(other);
    }
  }

  /**
   * Creates a new NotificationSentEvent RecordBuilder by copying an existing NotificationSentEvent instance.
   * @param other The existing instance to copy.
   * @return A new NotificationSentEvent RecordBuilder
   */
  public static com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder newBuilder(com.trivadis.kafkaws.avro.v1.NotificationSentEvent other) {
    if (other == null) {
      return new com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder();
    } else {
      return new com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for NotificationSentEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotificationSentEvent>
    implements org.apache.avro.data.RecordBuilder<NotificationSentEvent> {

    private com.trivadis.kafkaws.avro.v1.Context context;
    private com.trivadis.kafkaws.avro.v1.Context.Builder contextBuilder;
    private com.trivadis.kafkaws.avro.v1.Notification notification;
    private com.trivadis.kafkaws.avro.v1.Notification.Builder notificationBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.context)) {
        this.context = data().deepCopy(fields()[0].schema(), other.context);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasContextBuilder()) {
        this.contextBuilder = com.trivadis.kafkaws.avro.v1.Context.newBuilder(other.getContextBuilder());
      }
      if (isValidValue(fields()[1], other.notification)) {
        this.notification = data().deepCopy(fields()[1].schema(), other.notification);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasNotificationBuilder()) {
        this.notificationBuilder = com.trivadis.kafkaws.avro.v1.Notification.newBuilder(other.getNotificationBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing NotificationSentEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.trivadis.kafkaws.avro.v1.NotificationSentEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.context)) {
        this.context = data().deepCopy(fields()[0].schema(), other.context);
        fieldSetFlags()[0] = true;
      }
      this.contextBuilder = null;
      if (isValidValue(fields()[1], other.notification)) {
        this.notification = data().deepCopy(fields()[1].schema(), other.notification);
        fieldSetFlags()[1] = true;
      }
      this.notificationBuilder = null;
    }

    /**
      * Gets the value of the 'context' field.
      * @return The value.
      */
    public com.trivadis.kafkaws.avro.v1.Context getContext() {
      return context;
    }


    /**
      * Sets the value of the 'context' field.
      * @param value The value of 'context'.
      * @return This builder.
      */
    public com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder setContext(com.trivadis.kafkaws.avro.v1.Context value) {
      validate(fields()[0], value);
      this.contextBuilder = null;
      this.context = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'context' field has been set.
      * @return True if the 'context' field has been set, false otherwise.
      */
    public boolean hasContext() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'context' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.trivadis.kafkaws.avro.v1.Context.Builder getContextBuilder() {
      if (contextBuilder == null) {
        if (hasContext()) {
          setContextBuilder(com.trivadis.kafkaws.avro.v1.Context.newBuilder(context));
        } else {
          setContextBuilder(com.trivadis.kafkaws.avro.v1.Context.newBuilder());
        }
      }
      return contextBuilder;
    }

    /**
     * Sets the Builder instance for the 'context' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder setContextBuilder(com.trivadis.kafkaws.avro.v1.Context.Builder value) {
      clearContext();
      contextBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'context' field has an active Builder instance
     * @return True if the 'context' field has an active Builder instance
     */
    public boolean hasContextBuilder() {
      return contextBuilder != null;
    }

    /**
      * Clears the value of the 'context' field.
      * @return This builder.
      */
    public com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder clearContext() {
      context = null;
      contextBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'notification' field.
      * @return The value.
      */
    public com.trivadis.kafkaws.avro.v1.Notification getNotification() {
      return notification;
    }


    /**
      * Sets the value of the 'notification' field.
      * @param value The value of 'notification'.
      * @return This builder.
      */
    public com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder setNotification(com.trivadis.kafkaws.avro.v1.Notification value) {
      validate(fields()[1], value);
      this.notificationBuilder = null;
      this.notification = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'notification' field has been set.
      * @return True if the 'notification' field has been set, false otherwise.
      */
    public boolean hasNotification() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'notification' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.trivadis.kafkaws.avro.v1.Notification.Builder getNotificationBuilder() {
      if (notificationBuilder == null) {
        if (hasNotification()) {
          setNotificationBuilder(com.trivadis.kafkaws.avro.v1.Notification.newBuilder(notification));
        } else {
          setNotificationBuilder(com.trivadis.kafkaws.avro.v1.Notification.newBuilder());
        }
      }
      return notificationBuilder;
    }

    /**
     * Sets the Builder instance for the 'notification' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder setNotificationBuilder(com.trivadis.kafkaws.avro.v1.Notification.Builder value) {
      clearNotification();
      notificationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'notification' field has an active Builder instance
     * @return True if the 'notification' field has an active Builder instance
     */
    public boolean hasNotificationBuilder() {
      return notificationBuilder != null;
    }

    /**
      * Clears the value of the 'notification' field.
      * @return This builder.
      */
    public com.trivadis.kafkaws.avro.v1.NotificationSentEvent.Builder clearNotification() {
      notification = null;
      notificationBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public NotificationSentEvent build() {
      try {
        NotificationSentEvent record = new NotificationSentEvent();
        if (contextBuilder != null) {
          try {
            record.context = this.contextBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("context"));
            throw e;
          }
        } else {
          record.context = fieldSetFlags()[0] ? this.context : (com.trivadis.kafkaws.avro.v1.Context) defaultValue(fields()[0]);
        }
        if (notificationBuilder != null) {
          try {
            record.notification = this.notificationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("notification"));
            throw e;
          }
        } else {
          record.notification = fieldSetFlags()[1] ? this.notification : (com.trivadis.kafkaws.avro.v1.Notification) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NotificationSentEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<NotificationSentEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NotificationSentEvent>
    READER$ = (org.apache.avro.io.DatumReader<NotificationSentEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










