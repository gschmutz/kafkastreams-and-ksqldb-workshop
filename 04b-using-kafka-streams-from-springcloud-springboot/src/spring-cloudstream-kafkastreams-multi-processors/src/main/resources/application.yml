server:
  port: 8081

spring:
  application:
    name: "spring-boot-kafkastreams"

  cloud:
    function.definition: processUpperCase;processLowerCase

    stream:
      bindings:
        processUpperCase-in-0:
          destination: test-kstream-spring-cloudstream-input-topic
        processUpperCase-out-0:
          destination: test-kstream-spring-cloudstream-output-topic

        processLowerCase-in-0:
          destination: test-kstream-spring-cloudstream-input-topic
        processLowerCase-out-0:
          destination: test-kstream-spring-cloudstream-output-topic

      kafka:
        streams.binder:
          #applicationId: spring-boot-springcloud-kafkastreams
          functions:
            processUpperCase.applicationId: processUpperCase
            processLowerCase.applicationId: processLowerCase
          configuration:
            commit.interval.ms: 100
            cache.max.bytes.buffering: 0
            default.key.serde: org.apache.kafka.common.serialization.Serdes$VoidSerde
            default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde

  kafka:
    bootstrap-servers: dataplatform:9092

logging:
  level:
    root: info
    com.trivadis.kafkws.springboot.kafkastreamsspringcloudstream: debug

management:
  endpoint:
    health.show-details: ALWAYS

  endpoints:
    web:
      exposure:
        include: metrics, kafkastreamstopology, bindings